{"version":3,"sources":["component/MainList.js","component/ActionsInTable.js","component/TestList.js","App.js","index.js"],"names":["data","key","logo","size","src","name","age","address","tag","style","fontSize","color","icon","UserOutlined","React","Component","ActionsInTable","props","backgroundColor","shape","EyeOutlined","marginRight","onClick","showUpdateModal","id","timestamp","EditOutlined","danger","DeleteOutlined","borderColor","convertCSVToArray","require","TestList","cleanDate","msec","PN","convertEnToPe","momentj","moment","format","state","tempFileForUpdate","file","online","filteredInfo","sortedInfo","searchText","searchedColumn","isCreateModalVisible","isUploadModalVisible","isUpdateModalVisible","createModal","values","setState","tempData","length","created_at","Date","getTime","actions","percent","status","item","filter","index","updateModal","showCreateModal","showUploadModal","handleCreateOk","handleCreateCancel","handleUploadCancel","handleUpdateCancel","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","type","SearchOutlined","width","paddingBottom","paddingTop","paddingRight","handleReset","closeDropdown","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","createByCSV","arrayofArrays","separator","i","message","error","handleChange","pagination","filters","sorter","console","log","this","columns","title","ellipsis","a","b","sortOrder","columnKey","order","borderRadius","overflow","className","justify","ProfileOutlined","PlusOutlined","destroyOnClose","onCancel","footer","initialValues","onFinish","Item","marginTop","rules","required","marginLeft","htmlType","UploadOutlined","accept","action","beforeUpload","reader","FileReader","readAsText","onloadend","result","CloudUploadOutlined","dataSource","bordered","Header","Layout","Sider","Content","App","collapsed","toggle","trigger","collapsible","theme","mode","defaultSelectedKeys","VideoCameraOutlined","createElement","MenuUnfoldOutlined","MenuFoldOutlined","HomeOutlined","ReactDOM","direction","document","getElementById"],"mappings":"wbAMMA,EAAO,CACT,CACIC,IAAK,IACLC,KAAM,cAAC,IAAD,CAAQC,KAAK,QACLC,IAAI,iGAClBC,KAAM,aACNC,IAAK,GACLC,QAAS,2BACTC,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,QAAtC,SAA8C,oFAEvD,CACIV,IAAK,IACLC,KAAM,cAAC,IAAD,CAAQC,KAAK,QAAQS,KAAM,cAACC,EAAA,EAAD,MACjCR,KAAM,YACNC,IAAK,GACLC,QAAS,yBACTC,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,oFAC5D,CACIV,IAAK,IACLC,KAAM,cAAC,IAAD,CAAQC,KAAK,QACLC,IAAI,sKAClBC,KAAM,YACNC,IAAK,GACLC,QAAS,yBACTC,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,oFAE5D,CACIV,IAAK,IACLC,KAAM,cAAC,IAAD,CAAQC,KAAK,QAAQS,KAAM,cAACC,EAAA,EAAD,MACjCR,KAAM,UACNC,IAAK,GACLC,QAAS,yBACTC,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,oFAE5D,CACIV,IAAK,IACLC,KAAM,cAAC,IAAD,CAAQC,KAAK,QAAQS,KAAM,cAACC,EAAA,EAAD,MACjCR,KAAM,UACNC,IAAK,GACLC,QAAS,yBACTC,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,oFAE5D,CACIV,IAAK,IACLC,KAAM,cAAC,IAAD,CAAQC,KAAK,QAAQS,KAAM,cAACC,EAAA,EAAD,MACjCR,KAAM,UACNC,IAAK,GACLC,QAAS,yBACTC,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,oFAG5D,CACIV,IAAK,IACLC,KAAM,cAAC,IAAD,CAAQC,KAAK,QAAQS,KAAM,cAACC,EAAA,EAAD,MACjCR,KAAM,UACNC,IAAK,GACLC,QAAS,yBACTC,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,qF,GAIzCG,IAAMC,U,iKC9CdC,GAjBQ,SAACC,GAEpB,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAQR,MAAO,CAACS,gBAAiB,WAAYC,MAAM,SAC3CP,KAAM,cAACQ,EAAA,EAAD,CAAaX,MAAO,CAACE,MAAO,aAC1C,cAAC,IAAD,CAAQF,MAAO,CAACS,gBAAiB,UAAWG,YAAa,OACjDC,QAAS,kBAAIL,EAAMM,gBAAgBN,EAAMO,GAAGP,EAAMQ,YAAYN,MAAM,SACpEP,KAAM,cAACc,EAAA,EAAD,CAAcjB,MAAO,CAACE,MAAO,aAC3C,cAAC,IAAD,CAAQgB,QAAM,EAAClB,MAAO,CAACY,YAAa,OAAQF,MAAM,SAASP,KAAM,cAACgB,EAAA,EAAD,MACjE,cAAC,IAAD,CAAQT,MAAM,QAAQV,MAAO,CAACY,YAAa,OAA3C,mDACA,cAAC,IAAD,CAAQF,MAAM,QAAQV,MAAO,CAACY,YAAa,MAAOV,MAAO,OAAQkB,YAAa,QAA9E,kDCgBTC,GAAqBC,EAAQ,KAA7BD,kBAqXQE,IApXGD,EAAQ,K,4MAItBE,UAAY,SAACC,GACT,OAAOC,IAAGC,cAAcC,IAAQC,IAAOJ,GAAMK,OAAO,wBAAyBA,OAAO,0B,EAExFC,MAAQ,CACJC,kBAAmB,GACnBC,KAAM,KACNnC,QAAS,GACTL,KAAM,GACNyC,OAAQ,EACRC,aAAc,GACdC,WAAY,GACZC,WAAY,GACZC,eAAgB,GAChBC,sBAAsB,EACtBC,sBAAsB,EACtBC,sBAAsB,EACtBlD,KAAM,I,EAIVmD,YAAc,SAACC,GACX,EAAKC,SAAL,2BACO,EAAKb,OADZ,IACmBQ,sBAAsB,EACrChD,KAAK,GAAD,mBAAM,EAAKwC,MAAMxC,MAAjB,CAAuB,CACvBsD,SAAS,eAAKF,GACd5B,GAAI,EAAKgB,MAAMxC,KAAKuD,OAAS,EAC7BtD,IAAK,EAAKuC,MAAMxC,KAAKuD,OAAS,EAC9BrD,KAAM,cAAC,IAAD,CAAQC,KAAK,QAAQC,IAAKgD,EAAOlD,OACvCK,QAAS6C,EAAO7C,QAChBiD,WAAY,EAAKvB,WAAU,IAAIwB,MAAOC,WACtCjC,WAAW,IAAIgC,MAAOC,UACtBC,QAAS,cAAC,GAAD,CAAgBnC,GAAI,EAAKgB,MAAMxC,KAAKuD,OAAS,EAAG9B,WAAW,IAAIgC,MAAOC,UACtDnC,gBAAiB,EAAKA,kBAC/CoB,OAAQ,gCACJ,+BAAOS,EAAOT,SACd,cAAC,IAAD,CAAUiB,QAASR,EAAOT,OAAQkB,OAAO,cAG7CrD,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,0F,EAIpEY,gBAAkB,SAACC,EAAIC,GACnB,IAAIqC,EAAO,EAAKtB,MAAMxC,KAAK+D,QAAO,SAACD,EAAME,GACrC,GAAIF,EAAKtC,KAAOA,EACZ,OAAOsC,KAIf,EAAKT,SAAL,2BACO,EAAKb,OADZ,IAEIC,kBAAkB,2BAAKqB,EAAK,GAAGR,UAAd,IAAwB9B,KAAIC,cAC7CyB,sBAAsB,M,EAG9Be,YAAc,SAACb,GAAY,IAAD,EACA,EAAKZ,MAAMC,kBAA5BjB,EADiB,EACjBA,GAAIC,EADa,EACbA,UACT,EAAK4B,SAAL,2BACO,EAAKb,OADZ,IACmBU,sBAAsB,EACrClD,KAAK,GAAD,mBAAM,EAAKwC,MAAMxC,KAAK+D,QAAO,SAAAD,GAC7B,GAAIA,EAAKtC,KAAOA,EACZ,OAAOsC,MAFX,CAIA,CACAR,SAAS,eAAKF,GACd5B,GAAIA,EACJvB,IAAKuB,EACLtB,KAAM,cAAC,IAAD,CAAQC,KAAK,QAAQC,IAAKgD,EAAOlD,OACvCK,QAAS6C,EAAO7C,QAChBiD,WAAY,EAAKvB,UAAUR,GAC3BA,UAAWA,EACXkC,QAAS,cAAC,GAAD,CAAgBnC,GAAIA,EAAIC,UAAWA,EAAWF,gBAAiB,EAAKA,kBAC7EoB,OAAQ,gCACJ,+BAAOS,EAAOT,SACd,cAAC,IAAD,CAAUiB,QAASR,EAAOT,OAAQkB,OAAO,cAG7CrD,IAAK,cAAC,IAAD,CAAKC,MAAO,CAACC,SAAU,QAASC,MAAM,aAAtC,SAAmD,0F,EAMpEuD,gBAAkB,WACd,EAAKb,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BQ,sBAAsB,M,EAExDmB,gBAAkB,WACd,EAAKd,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BS,sBAAsB,M,EAGxDmB,eAAiB,WACb,EAAKf,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BQ,sBAAsB,M,EAGxDqB,mBAAqB,WACjB,EAAKhB,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BQ,sBAAsB,M,EAExDsB,mBAAqB,WACjB,EAAKjB,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BS,sBAAsB,M,EAExDsB,mBAAqB,WACjB,EAAKlB,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BU,sBAAsB,M,EAGxDsB,qBAAuB,SAAAC,GAAS,MAAK,CACjCC,eAAgB,gBAAEC,EAAF,EAAEA,gBAAiBC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,QAASC,EAA1C,EAA0CA,aAA1C,OACZ,sBAAKrE,MAAO,CAACsE,QAAS,GAAtB,UACI,cAAC,IAAD,CACIC,IAAK,SAAAC,GACD,EAAKC,YAAcD,GAEvBE,YAAW,iBAAYV,GACvBW,MAAOR,EAAa,GACpBS,SAAU,SAAAC,GAAC,OAAIX,EAAgBW,EAAEC,OAAOH,MAAQ,CAACE,EAAEC,OAAOH,OAAS,KACnEI,aAAc,kBAAM,EAAKC,aAAab,EAAcC,EAASJ,IAC7DhE,MAAO,CAACiF,aAAc,EAAGC,QAAS,WAEtC,eAAC,IAAD,WACI,cAAC,IAAD,CACIC,KAAK,UACLtE,QAAS,kBAAM,EAAKmE,aAAab,EAAcC,EAASJ,IACxD7D,KAAM,cAACiF,EAAA,EAAD,IACN1F,KAAK,QACLM,MAAO,CAACqF,MAAO,GAAIC,cAAe,OAAQC,WAAY,MAAOC,aAAc,OAL/E,SAOI,mBAAGxF,MAAO,CAACkF,QAAS,UAApB,sDAIJ,cAAC,IAAD,CAAQrE,QAAS,kBAAM,EAAK4E,YAAYpB,IAAe3E,KAAK,QAAQM,MAAO,CAACqF,MAAO,IAAnF,sCAGA,cAAC,IAAD,CACIF,KAAK,OACLzF,KAAK,QACLmB,QAAS,WACLuD,EAAQ,CAACsB,eAAe,IACxB,EAAK9C,SAAS,CACVP,WAAY8B,EAAa,GACzB7B,eAAgB0B,KAP5B,mDAgBZ2B,WAAY,SAAAC,GAAQ,OAAI,cAACR,EAAA,EAAD,CAAgBpF,MAAO,CAACC,SAAU,OAAQC,MAAO0F,EAAW,eAAYC,MAChGC,SAAU,SAACnB,EAAOoB,GAAR,OACNA,EAAO/B,GACD+B,EAAO/B,GAAWgC,WAAWC,cAAcC,SAASvB,EAAMsB,eAC1D,IACVE,8BAA+B,SAAAC,GACvBA,GACAC,YAAW,kBAAM,EAAK5B,YAAY6B,WAAU,MAGpDC,OAAQ,SAAAC,GAAI,OACR,EAAKzE,MAAMO,iBAAmB0B,EAC1B,cAAC,IAAD,CACIyC,eAAgB,CAAChG,gBAAiB,UAAW6D,QAAS,GACtDoC,YAAa,CAAC,EAAK3E,MAAMM,YACzBsE,YAAU,EACVC,gBAAiBJ,EAAOA,EAAKR,WAAa,KAG9CQ,K,EAIZxB,aAAe,SAACb,EAAcC,EAASJ,GACnCI,IACA,EAAKxB,SAAS,CACVP,WAAY8B,EAAa,GACzB7B,eAAgB0B,K,EAGxB6C,YAAc,WACV,IAAMC,EAAgBzF,GAAkB,EAAKU,MAAME,KAAM,CACrD8E,UAAW,MAIf,GAAID,EAAc,GAAGZ,SAAS,SACvBY,EAAc,GAAGZ,SAAS,YAC1BY,EAAc,GAAGZ,SAAS,QAC7B,IAAK,IAAIc,EAAI,EAAGA,EAAIF,EAAchE,OAAQkE,IACtC,EAAKtE,YAAYoE,EAAcE,SAGnCC,IAAQC,MAAR,wMAGJ,EAAKtE,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BS,sBAAsB,M,EAExDiD,YAAc,SAAApB,GACVA,IACA,EAAKzB,SAAS,CAACP,WAAY,M,EAE/B8E,aAAe,SAACC,EAAYC,EAASC,GACjCC,QAAQC,IAAI,qBAAsBJ,EAAYC,EAASC,GACvD,EAAK1E,SAAS,CACVT,aAAckF,EACdjF,WAAYkF,K,4CAIpB,WAAU,IAAD,OACAlF,EAAcqF,KAAK1F,MAAnBK,WACLA,EAAaA,GAAc,GAE3B,IAAMsF,EAAU,CACZ,CACIC,MAAO,2BACP3D,UAAW,OACXxE,IAAK,OACL6F,MAAO,OACPuC,UAAU,GANF,aASRD,MAAO,2BACP3D,UAAW,UACXxE,IAAK,UACL6F,MAAO,SACJoC,KAAK1D,qBAAqB,YAEjC,CACI4D,MAAO,4BACP3D,UAAW,MACXqB,MAAO,QACP7F,IAAK,MACLoI,UAAU,GAEd,CACID,MAAO,uCACP3D,UAAW,SACXxE,IAAK,SACL6F,MAAO,SAEX,CACIsC,MAAO,gEACP3D,UAAW,aACXxE,IAAK,aACL6F,MAAO,QACPiC,OAAQ,SAACO,EAAGC,GAAJ,OAAUA,EAAE9G,UAAY6G,EAAE7G,WAClC+G,UAAoC,eAAzB3F,EAAW4F,WAA8B5F,EAAW6F,OAEnE,CACIN,MAAO,uCACP3D,UAAW,UACXxE,IAAK,UACL6F,MAAO,UAIf,OACI,eAAC,IAAD,CAAMrF,MAAO,CAACkI,aAAc,OAAQC,SAAU,QAA9C,UACI,qBAAKC,UAAU,eAAf,SACI,eAAC,IAAD,CAAKC,QAAQ,gBAAb,UACI,eAAC,IAAD,WACI,+BAAM,cAACC,EAAA,EAAD,CAAiBtI,MAAO,CAACC,SAAU,YACzC,sBAAMD,MAAO,CAACY,YAAa,MAAOX,SAAU,QAA5C,SAAqD,+EAEzD,eAAC,IAAD,WACI,cAAC,IAAD,CAAQS,MAAM,QAAQP,KAAM,cAACoI,EAAA,EAAD,IAAiBvI,MAAO,CAChDY,YAAa,MACbV,MAAO,QACPO,gBAAiB,WAClBI,QAAS4G,KAAKhE,gBAJjB,4CAMA,cAAC,IAAD,CAAO+E,gBAAgB,EAAMb,MAAM,6EAC5BvB,QAASqB,KAAK1F,MAAMQ,qBACpBkG,SAAUhB,KAAK7D,mBAAoB8E,OAAQ,KAFlD,SAGI,eAAC,IAAD,CAAMC,cAAe,CAACzG,OAAQ,GAAI0G,SAAUnB,KAAK/E,YAAjD,UACI,gCAAO,8FACP,cAAC,IAAKmG,KAAN,CAAWjJ,KAAK,OAAhB,SACI,cAAC,IAAD,CAAOI,MAAO,CAAC8I,UAAW,OAAQpE,YAAY,sJAElD,gCAAO,iEACP,cAAC,IAAKmE,KAAN,CAAWjJ,KAAK,UACLmJ,MAAO,CAAC,CAACC,UAAU,EAAM/B,QAAS,qHAD7C,SAGI,cAAC,IAAD,CAAOjH,MAAO,CAAC8I,UAAW,OAAQpE,YAAY,+BAElD,gCAAO,uKACP,cAAC,IAAKmE,KAAN,CAAWjJ,KAAK,SAASmJ,MAAO,CAAC,CAC7BC,UAAU,EACV/B,QAAS,yLAFb,SAII,cAAC,IAAD,CAAajH,MAAO,CAAC8I,UAAW,WAEpC,eAAC,IAAKD,KAAN,WACI,cAAC,IAAD,CAAQ7I,MAAO,CAACiJ,WAAY,OACpBpI,QAAS4G,KAAK7D,mBADtB,kDAEA,cAAC,IAAD,CAAQuB,KAAK,UAAU+D,SAAS,SAAhC,wCAIZ,cAAC,IAAD,CAAQrI,QAAS4G,KAAK/D,gBAAiBhD,MAAM,QACrCP,KAAM,cAACgJ,EAAA,EAAD,CAAgBnJ,MAAO,CAACC,SAAU,UACxCD,MAAO,CAACY,YAAa,MAAOV,MAAO,QAASO,gBAAiB,WAFrE,+DAIA,cAAC,IAAD,CAAO+H,gBAAgB,EAAMb,MAAM,iJAC5BvB,QAASqB,KAAK1F,MAAMS,qBACpBiG,SAAUhB,KAAK5D,mBAAoB6E,OAAQ,CAAC,MAFnD,SAGI,cAAC,IAAD,CACIU,OAAO,YACPC,OAAO,mDACPC,aAAc,SAAArH,GACV,IAAMsH,EAAS,IAAIC,WAMnB,OALAD,EAAOE,WAAWxH,GAClBsH,EAAOG,UAAY,SAAA7E,GACf,EAAKjC,SAAL,2BAAkB,EAAKb,OAAvB,IAA8BE,KAAM4C,EAAEC,OAAO6E,UAC7C,EAAK9C,gBAEF,GAVf,SAaI,eAAC,IAAD,WACI,cAAC+C,EAAA,EAAD,CAAqBzE,KAAK,SAASnF,MAAO,CAACC,SAAU,UADzD,6JAQR,cAAC,IAAD,CAAOuI,gBAAgB,EAAMb,MAAM,kFAC5BvB,QAASqB,KAAK1F,MAAMU,qBACpBgG,SAAUhB,KAAK3D,mBAAoB4E,OAAQ,KAFlD,SAGI,eAAC,IAAD,CAAMC,cAAe,CACjBlJ,KAAMgI,KAAK1F,MAAMC,kBAAkBvC,KACnCK,QAAS2H,KAAK1F,MAAMC,kBAAkBlC,QACtCoC,OAAQuF,KAAK1F,MAAMC,kBAAkBE,QACtC0G,SAAUnB,KAAKjE,YAJlB,UAKI,gCAAO,8FACP,cAAC,IAAKqF,KAAN,CAAWjJ,KAAK,OAAhB,SACI,cAAC,IAAD,CAAOI,MAAO,CAAC8I,UAAW,OAAQpE,YAAY,sJAElD,gCAAO,iEACP,cAAC,IAAKmE,KAAN,CAAWjJ,KAAK,UACLmJ,MAAO,CAAC,CAACC,UAAU,EAAM/B,QAAS,qHAD7C,SAGI,cAAC,IAAD,CAAOjH,MAAO,CAAC8I,UAAW,OAAQpE,YAAY,+BAElD,gCAAO,uKACP,cAAC,IAAKmE,KAAN,CAAWjJ,KAAK,SAASmJ,MAAO,CAAC,CAC7BC,UAAU,EACV/B,QAAS,yLAFb,SAII,cAAC,IAAD,CAAajH,MAAO,CAAC8I,UAAW,WAEpC,eAAC,IAAKD,KAAN,WACI,cAAC,IAAD,CAAQ7I,MAAO,CAACiJ,WAAY,OACpBpI,QAAS4G,KAAK3D,mBADtB,kDAEA,cAAC,IAAD,CAAQqB,KAAK,UAAU+D,SAAS,SAAhC,kEAOxB,cAAC,IAAD,CAAOxB,QAASA,EAASmC,WAAYpC,KAAK1F,MAAMxC,KAAMuK,UAAQ,EAAClF,SAAU6C,KAAKN,sB,GA3WvE9G,IAAMC,YClBtByJ,GAA0BC,IAA1BD,OAAQE,GAAkBD,IAAlBC,MAAOC,GAAWF,IAAXE,QAuFPC,G,4MAnFXpI,MAAQ,CACJqI,WAAW,G,EAGfC,OAAS,WACL,EAAKzH,SAAS,CACVwH,WAAY,EAAKrI,MAAMqI,a,4CAI/B,WACI,OACI,eAAC,IAAD,WACI,eAACH,GAAD,CAAOK,QAAS,KAAMC,aAAW,EAACH,UAAW3C,KAAK1F,MAAMqI,UAAxD,UACI,qBAAKhC,UAAU,SACf,eAAC,IAAD,CAAMoC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,KAAvD,UACI,cAAC,IAAK7B,KAAN,CAAmB1I,KAAM,cAACC,EAAA,EAAD,IAAzB,kBAAe,KAGf,cAAC,IAAKyI,KAAN,CAAmB1I,KAAM,cAACwK,EAAA,EAAD,IAAzB,kBAAe,KAGf,cAAC,IAAK9B,KAAN,CAAmB1I,KAAM,cAACgJ,EAAA,EAAD,IAAzB,kBAAe,WAKvB,eAAC,IAAD,CAAQf,UAAU,cAAlB,UACI,cAAC2B,GAAD,CAAQ3B,UAAU,yBACVpI,MAAO,CAACsE,QAAS,EAAG7D,gBAAiB,WAD7C,SAEI,eAAC,IAAD,CAAK4H,QAAQ,gBAAb,UACI,eAAC,IAAD,WACKhI,IAAMuK,cAAcnD,KAAK1F,MAAMqI,UAAYS,IAAqBC,IAAkB,CAC/E1C,UAAW,UACXpI,MAAO,CACHY,YAAa,OAAQV,MAAO,QAC5BD,SAAU,OAAQQ,gBAAiB,UACnC6D,QAAS,MAAO4D,aAAc,OAElCrH,QAAS4G,KAAK4C,SAElB,cAACU,EAAA,EAAD,CAAc/K,MAAO,CAACE,MAAO,QAASU,YAAa,OAAQX,SAAU,UACrE,sBAAMD,MAAO,CACTE,MAAO,QACPU,YAAa,OACbuH,SAAU,UAHd,kEAQJ,eAAC,IAAD,WACI,cAAC/H,EAAA,EAAD,CAAcJ,MAAO,CAACE,MAAO,QAAS+I,WAAY,SAClD,sBAAMjJ,MAAO,CACTE,MAAO,QACPU,YAAa,MACbqI,WAAY,QAHhB,0BAWZ,qBAAKb,UAAU,qBAAf,SAEI,cAAC8B,GAAD,CACI9B,UAAU,wCACVoC,MAAM,OACNxK,MAAO,CACHsE,QAAS,IAJjB,SAQI,cAAC,GAAD,kB,GA3EVjE,IAAMC,WCdxB0K,IAASzE,OACL,cAAC,IAAD,CAAgB0E,UAAU,MAA1B,SACI,cAAC,GAAD,MAENC,SAASC,eAAe,W","file":"static/js/main.8db5ae28.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport {Avatar, Card, Table, Tag, Input, Button, Space } from \"antd\"\r\nimport {ProfileOutlined, UserOutlined,SearchOutlined} from \"@ant-design/icons\"\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nconst data = [\r\n    {\r\n        key: '1',\r\n        logo: <Avatar size=\"large\"\r\n                      src='https://karboom.io/storage/employers/logo_thumb/Ob9MbyafIafUYtQYa0ypHAwIzURnH1zZ9er7k3PH.png'/>,\r\n        name: 'John Brown',\r\n        age: 32,\r\n        address: 'New York No. 1 Lake Park',\r\n        tag: <Tag style={{fontSize: '12px'}} color=\"error\"><strong>بدون ضبط</strong></Tag>,\r\n    },\r\n    {\r\n        key: '2',\r\n        logo: <Avatar size=\"large\" icon={<UserOutlined/>}/>,\r\n        name: 'Jim Green',\r\n        age: 42,\r\n        address: 'London No. 2 Lake Park',\r\n        tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>    },\r\n    {\r\n        key: '3',\r\n        logo: <Avatar size=\"large\"\r\n                      src='https://media-exp1.licdn.com/dms/image/C4D0BAQEOo13_hCFylA/company-logo_200_200/0/1548337352822?e=2159024400&v=beta&t=7AholjoKLToFr1xxjkLamtU0gaaDjXUg3uraQKATrJk'/>,\r\n        name: 'Joe Black',\r\n        age: 32,\r\n        address: 'London No. 3 Lake Park',\r\n        tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>\r\n    },\r\n    {\r\n        key: '4',\r\n        logo: <Avatar size=\"large\" icon={<UserOutlined/>}/>,\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 4 Lake Park',\r\n        tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>\r\n    },\r\n    {\r\n        key: '5',\r\n        logo: <Avatar size=\"large\" icon={<UserOutlined/>}/>,\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 5 Lake Park',\r\n        tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>\r\n    },\r\n    {\r\n        key: '6',\r\n        logo: <Avatar size=\"large\" icon={<UserOutlined/>}/>,\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 6 Lake Park',\r\n        tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>\r\n\r\n    },\r\n    {\r\n        key: '7',\r\n        logo: <Avatar size=\"large\" icon={<UserOutlined/>}/>,\r\n        name: 'Jim Red',\r\n        age: 32,\r\n        address: 'London No. 1 Lake Park',\r\n        tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>\r\n    },\r\n];\r\n\r\nclass MainList extends React.Component {\r\n    state = {\r\n        filteredInfo: null,\r\n        sortedInfo: null,\r\n        searchText: '',\r\n        searchedColumn: '',\r\n    };\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n            <div style={{ padding: 8 }}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined />}\r\n                        size=\"small\"\r\n                        style={{ width: 90 }}\r\n                    >\r\n                        Search\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                        Reset\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({ closeDropdown: false });\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        Filter\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n    };\r\n\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        let {sortedInfo, filteredInfo} = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n        filteredInfo = filteredInfo || {};\r\n        const columns = [\r\n            {\r\n                title: 'لوگو',\r\n                dataIndex: 'logo',\r\n                key: 'logo',\r\n                width: 80,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: 'آدرس',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                width: 350,\r\n                sorter: (a, b) => a.address.length - b.address.length,\r\n                sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n                ellipsis: true,\r\n                ...this.getColumnSearchProps('address'),\r\n            },\r\n            {\r\n                title: 'تگ ها',\r\n                dataIndex: 'tag',\r\n                width: 120,\r\n                key: 'tag',\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: 'Name',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                filters: [\r\n                    {text: 'Joe', value: 'Joe'},\r\n                    {text: 'Jim', value: 'Jim'},\r\n                ],\r\n                filteredValue: filteredInfo.name || null,\r\n                onFilter: (value, record) => record.name.includes(value),\r\n                sorter: (a, b) => a.name.length - b.name.length,\r\n                sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: 'Age',\r\n                dataIndex: 'age',\r\n                key: 'age',\r\n                sorter: (a, b) => a.age - b.age,\r\n                sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n                ellipsis: true,\r\n            },\r\n\r\n            // {\r\n            //     title: 'Address',\r\n            //     dataIndex: 'address',\r\n            //     key: 'address',\r\n            //     filters: [\r\n            //         {text: 'London', value: 'London'},\r\n            //         {text: 'New York', value: 'New York'},\r\n            //     ],\r\n            //     filteredValue: filteredInfo.address || null,\r\n            //     onFilter: (value, record) => record.address.includes(value),\r\n            //     sorter: (a, b) => a.address.length - b.address.length,\r\n            //     sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n            //     ellipsis: true,\r\n            // },\r\n        ];\r\n        return (\r\n            <Card style={{borderRadius: '10px',overflow: 'scroll'}}>\r\n                <div className='table-header'>\r\n\r\n            <span>\r\n                <ProfileOutlined style={{fontSize: '16px'}}/>\r\n            </span>\r\n                    <span style={{marginRight: '8px', fontSize: '16px'}}>\r\n                <strong>\r\n                اشتراک\r\n                </strong>\r\n            </span>\r\n                </div>\r\n                <Table columns={columns} dataSource={data} bordered onChange={this.handleChange}/>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainList\r\n","import {Button, Row} from \"antd\";\r\nimport {DeleteOutlined, EditOutlined, EyeOutlined} from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nconst ActionsInTable = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Button style={{backgroundColor: '#10239e'}} shape=\"circle\"\r\n                        icon={<EyeOutlined style={{color: 'white'}}/>}/>\r\n                <Button style={{backgroundColor: '#fa8c16', marginRight: '5px'}}\r\n                        onClick={()=>props.showUpdateModal(props.id,props.timestamp)} shape=\"circle\"\r\n                        icon={<EditOutlined style={{color: 'white'}}/>}/>\r\n                <Button danger style={{marginRight: '5px'}} shape=\"circle\" icon={<DeleteOutlined/>}/>\r\n                <Button shape=\"round\" style={{marginRight: '8px'}}>اتاق ها</Button>\r\n                <Button shape=\"round\" style={{marginRight: '8px', color: 'blue', borderColor: 'blue'}}>جلسات</Button>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default ActionsInTable","import {\r\n    message,\r\n    Table,\r\n    Input,\r\n    Button,\r\n    Space,\r\n    Avatar,\r\n    Card,\r\n    Tag,\r\n    Progress,\r\n    Row,\r\n    Col,\r\n    Modal,\r\n    Form,\r\n    InputNumber,\r\n    Upload\r\n} from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport {\r\n    ProfileOutlined,\r\n    SearchOutlined,\r\n    UserOutlined,\r\n    PlusOutlined,\r\n    UploadOutlined,\r\n    CloudUploadOutlined\r\n} from '@ant-design/icons';\r\nimport React from \"react\";\r\nimport PN from \"persian-number\";\r\nimport moment from 'moment'\r\nimport momentj from \"moment-jalaali\";\r\nimport ActionsInTable from \"./ActionsInTable\";\r\n\r\nconst {convertCSVToArray} = require('convert-csv-to-array');\r\nconst converter = require('convert-csv-to-array');\r\n\r\n\r\nclass TestList extends React.Component {\r\n    cleanDate = (msec) => {\r\n        return PN.convertEnToPe(momentj(moment(msec).format(\"HH:mm:ss YYYY-MM-DD\"),).format('HH:mm:ss jYYYY-jM-jD'))\r\n    }\r\n    state = {\r\n        tempFileForUpdate: {},\r\n        file: null,\r\n        address: '',\r\n        logo: '',\r\n        online: 0,\r\n        filteredInfo: '',\r\n        sortedInfo: '',\r\n        searchText: '',\r\n        searchedColumn: '',\r\n        isCreateModalVisible: false,\r\n        isUploadModalVisible: false,\r\n        isUpdateModalVisible: false,\r\n        data: [],\r\n    };\r\n\r\n\r\n    createModal = (values) => {\r\n        this.setState({\r\n            ...this.state, isCreateModalVisible: false,\r\n            data: [...this.state.data, {\r\n                tempData: {...values},\r\n                id: this.state.data.length + 1,\r\n                key: this.state.data.length + 1,\r\n                logo: <Avatar size=\"large\" src={values.logo}/>,\r\n                address: values.address,\r\n                created_at: this.cleanDate(new Date().getTime()),\r\n                timestamp: new Date().getTime(),\r\n                actions: <ActionsInTable id={this.state.data.length + 1} timestamp={new Date().getTime()}\r\n                                         showUpdateModal={this.showUpdateModal}/>,\r\n                online: <div>\r\n                    <span>{values.online}</span>\r\n                    <Progress percent={values.online} status='active'/>\r\n                </div>\r\n                ,\r\n                tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>\r\n            }],\r\n        })\r\n    }\r\n    showUpdateModal = (id, timestamp) => {\r\n        let item = this.state.data.filter((item, index) => {\r\n            if (item.id === id) {\r\n                return item;\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            tempFileForUpdate: {...item[0].tempData, id, timestamp},\r\n            isUpdateModalVisible: true\r\n        })\r\n    }\r\n    updateModal = (values) => {\r\n        let {id, timestamp} = this.state.tempFileForUpdate\r\n        this.setState({\r\n            ...this.state, isUpdateModalVisible: false,\r\n            data: [...this.state.data.filter(item => {\r\n                if (item.id !== id) {\r\n                    return item\r\n                }\r\n            }), {\r\n                tempData: {...values},\r\n                id: id,\r\n                key: id,\r\n                logo: <Avatar size=\"large\" src={values.logo}/>,\r\n                address: values.address,\r\n                created_at: this.cleanDate(timestamp),\r\n                timestamp: timestamp,\r\n                actions: <ActionsInTable id={id} timestamp={timestamp} showUpdateModal={this.showUpdateModal}/>,\r\n                online: <div>\r\n                    <span>{values.online}</span>\r\n                    <Progress percent={values.online} status='active'/>\r\n                </div>\r\n                ,\r\n                tag: <Tag style={{fontSize: '12px'}} color=\"processing\"><strong>ضبط فوری</strong></Tag>\r\n            }],\r\n        })\r\n    }\r\n\r\n\r\n    showCreateModal = () => {\r\n        this.setState({...this.state, isCreateModalVisible: true})\r\n    };\r\n    showUploadModal = () => {\r\n        this.setState({...this.state, isUploadModalVisible: true})\r\n    };\r\n\r\n    handleCreateOk = () => {\r\n        this.setState({...this.state, isCreateModalVisible: false})\r\n    };\r\n\r\n    handleCreateCancel = () => {\r\n        this.setState({...this.state, isCreateModalVisible: false})\r\n    };\r\n    handleUploadCancel = () => {\r\n        this.setState({...this.state, isUploadModalVisible: false})\r\n    };\r\n    handleUpdateCancel = () => {\r\n        this.setState({...this.state, isUpdateModalVisible: false})\r\n    }\r\n\r\n    getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({setSelectedKeys, selectedKeys, confirm, clearFilters}) => (\r\n            <div style={{padding: 8}}>\r\n                <Input\r\n                    ref={node => {\r\n                        this.searchInput = node;\r\n                    }}\r\n                    placeholder={`Search ${dataIndex}`}\r\n                    value={selectedKeys[0]}\r\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                    style={{marginBottom: 8, display: 'block'}}\r\n                />\r\n                <Space>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        icon={<SearchOutlined/>}\r\n                        size=\"small\"\r\n                        style={{width: 90, paddingBottom: '10px', paddingTop: '0px', paddingRight: '3px'}}\r\n                    >\r\n                        <p style={{display: \"inline\"}}>\r\n                            جست و جو\r\n                        </p>\r\n                    </Button>\r\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{width: 90}}>\r\n                        ریست\r\n                    </Button>\r\n                    <Button\r\n                        type=\"link\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            confirm({closeDropdown: false});\r\n                            this.setState({\r\n                                searchText: selectedKeys[0],\r\n                                searchedColumn: dataIndex,\r\n                            });\r\n                        }}\r\n                    >\r\n                        فیلتر\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n        ),\r\n        filterIcon: filtered => <SearchOutlined style={{fontSize: '18px', color: filtered ? '#1890ff' : undefined}}/>,\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : '',\r\n        onFilterDropdownVisibleChange: visible => {\r\n            if (visible) {\r\n                setTimeout(() => this.searchInput.select(), 100);\r\n            }\r\n        },\r\n        render: text =>\r\n            this.state.searchedColumn === dataIndex ? (\r\n                <Highlighter\r\n                    highlightStyle={{backgroundColor: '#ffc069', padding: 0}}\r\n                    searchWords={[this.state.searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                />\r\n            ) : (\r\n                text\r\n            ),\r\n    });\r\n\r\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        this.setState({\r\n            searchText: selectedKeys[0],\r\n            searchedColumn: dataIndex,\r\n        });\r\n    };\r\n    createByCSV = () => {\r\n        const arrayofArrays = convertCSVToArray(this.state.file, {\r\n            separator: ',', // use the separator you use in your csv (e.g. '\\t', ',', ';' ...)\r\n        });\r\n        // console.log(arrayofArrays)\r\n        // console.log(arrayofArrays[0])\r\n        if (arrayofArrays[0].includes(\"logo\")\r\n            && arrayofArrays[0].includes(\"address\")\r\n            && arrayofArrays[0].includes(\"logo\")) {\r\n            for (let i = 1; i < arrayofArrays.length; i++) {\r\n                this.createModal(arrayofArrays[i])\r\n            }\r\n        } else {\r\n            message.error(`اطلاعات فایل csv شما با الگو مطابقت ندارد`);\r\n        }\r\n\r\n        this.setState({...this.state, isUploadModalVisible: false})\r\n    }\r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({searchText: ''});\r\n    };\r\n    handleChange = (pagination, filters, sorter) => {\r\n        console.log('Various parameters', pagination, filters, sorter);\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let {sortedInfo} = this.state;\r\n        sortedInfo = sortedInfo || {};\r\n\r\n        const columns = [\r\n            {\r\n                title: 'لوگو',\r\n                dataIndex: 'logo',\r\n                key: 'logo',\r\n                width: '80px',\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: 'آدرس',\r\n                dataIndex: 'address',\r\n                key: 'address',\r\n                width: '160px',\r\n                ...this.getColumnSearchProps('address'),\r\n            },\r\n            {\r\n                title: 'تگ ها',\r\n                dataIndex: 'tag',\r\n                width: '100px',\r\n                key: 'tag',\r\n                ellipsis: true,\r\n            },\r\n            {\r\n                title: 'آنلاین',\r\n                dataIndex: 'online',\r\n                key: 'online',\r\n                width: '170px',\r\n            },\r\n            {\r\n                title: 'تاریخ ایجاد',\r\n                dataIndex: 'created_at',\r\n                key: 'created_at',\r\n                width: '150px',\r\n                sorter: (a, b) => b.timestamp - a.timestamp,\r\n                sortOrder: sortedInfo.columnKey === 'created_at' && sortedInfo.order\r\n            },\r\n            {\r\n                title: 'عملیات',\r\n                dataIndex: 'actions',\r\n                key: 'actions',\r\n                width: '250px',\r\n            },\r\n\r\n        ];\r\n        return (\r\n            <Card style={{borderRadius: '10px', overflow: 'auto'}}>\r\n                <div className='table-header'>\r\n                    <Row justify='space-between'>\r\n                        <Col>\r\n                            <span><ProfileOutlined style={{fontSize: '16px'}}/></span>\r\n                            <span style={{marginRight: '8px', fontSize: '16px'}}><strong>اشتراک</strong></span>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button shape=\"round\" icon={<PlusOutlined/>} style={{\r\n                                marginRight: '8px',\r\n                                color: 'white',\r\n                                backgroundColor: '#389e0d'\r\n                            }} onClick={this.showCreateModal}>ایجاد</Button>\r\n\r\n                            <Modal destroyOnClose={true} title=\"ساخت آیتم جدید\"\r\n                                   visible={this.state.isCreateModalVisible}\r\n                                   onCancel={this.handleCreateCancel} footer={null}>\r\n                                <Form initialValues={{online: 0}} onFinish={this.createModal}>\r\n                                    <label><strong>url برای لوگو:</strong></label>\r\n                                    <Form.Item name=\"logo\">\r\n                                        <Input style={{marginTop: \"5px\"}} placeholder=\"آدرس اینترنتی لوگو (اختیاری)\"/>\r\n                                    </Form.Item>\r\n                                    <label><strong>آدرس:</strong></label>\r\n                                    <Form.Item name=\"address\"\r\n                                               rules={[{required: true, message: 'لطفا آدرس را وارد کنید'},\r\n                                               ]}>\r\n                                        <Input style={{marginTop: \"5px\"}} placeholder=\"آدرس\"/>\r\n                                    </Form.Item>\r\n                                    <label><strong>تعداد آنلاین: (پیش فرض صفر)</strong></label>\r\n                                    <Form.Item name=\"online\" rules={[{\r\n                                        required: true,\r\n                                        message: 'لطفا مقدار عددی آنلاین را وارد کنید'\r\n                                    }]}>\r\n                                        <InputNumber style={{marginTop: \"5px\"}}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button style={{marginLeft: '8px'}}\r\n                                                onClick={this.handleCreateCancel}>انصراف</Button>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">ثبت</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Modal>\r\n                            <Button onClick={this.showUploadModal} shape=\"round\"\r\n                                    icon={<UploadOutlined style={{fontSize: '16px'}}/>}\r\n                                    style={{marginRight: '8px', color: 'white', backgroundColor: '#1890ff'}}>وارد\r\n                                کردن</Button>\r\n                            <Modal destroyOnClose={true} title=\"ایجاد آیتم با آپلود اطلاعات\"\r\n                                   visible={this.state.isUploadModalVisible}\r\n                                   onCancel={this.handleUploadCancel} footer={[null]}>\r\n                                <Upload\r\n                                    accept='.csv,.txt'\r\n                                    action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n                                    beforeUpload={file => {\r\n                                        const reader = new FileReader();\r\n                                        reader.readAsText(file);\r\n                                        reader.onloadend = e => {\r\n                                            this.setState({...this.state, file: e.target.result})\r\n                                            this.createByCSV();\r\n                                        }\r\n                                        return false;\r\n                                    }}\r\n                                >\r\n                                    <Button>\r\n                                        <CloudUploadOutlined type=\"upload\" style={{fontSize: '16px'}}/>فایل csv خود را\r\n                                        اینجا آپلود کنید\r\n                                    </Button>\r\n                                </Upload>\r\n                            </Modal>\r\n\r\n\r\n                            <Modal destroyOnClose={true} title=\"بروزرسانی آیتم\"\r\n                                   visible={this.state.isUpdateModalVisible}\r\n                                   onCancel={this.handleUpdateCancel} footer={null}>\r\n                                <Form initialValues={{\r\n                                    logo: this.state.tempFileForUpdate.logo,\r\n                                    address: this.state.tempFileForUpdate.address,\r\n                                    online: this.state.tempFileForUpdate.online,\r\n                                }} onFinish={this.updateModal}>\r\n                                    <label><strong>url برای لوگو:</strong></label>\r\n                                    <Form.Item name=\"logo\">\r\n                                        <Input style={{marginTop: \"5px\"}} placeholder=\"آدرس اینترنتی لوگو (اختیاری)\"/>\r\n                                    </Form.Item>\r\n                                    <label><strong>آدرس:</strong></label>\r\n                                    <Form.Item name=\"address\"\r\n                                               rules={[{required: true, message: 'لطفا آدرس را وارد کنید'},\r\n                                               ]}>\r\n                                        <Input style={{marginTop: \"5px\"}} placeholder=\"آدرس\"/>\r\n                                    </Form.Item>\r\n                                    <label><strong>تعداد آنلاین: (پیش فرض صفر)</strong></label>\r\n                                    <Form.Item name=\"online\" rules={[{\r\n                                        required: true,\r\n                                        message: 'لطفا مقدار عددی آنلاین را وارد کنید'\r\n                                    }]}>\r\n                                        <InputNumber style={{marginTop: \"5px\"}}/>\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button style={{marginLeft: '8px'}}\r\n                                                onClick={this.handleUpdateCancel}>انصراف</Button>\r\n                                        <Button type=\"primary\" htmlType=\"submit\">ویرایش</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Modal>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                <Table columns={columns} dataSource={this.state.data} bordered onChange={this.handleChange}/>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TestList","import React from 'react'\nimport {Col, Row} from 'antd'\nimport {Layout, Menu} from 'antd';\nimport './App.css'\n\n\nimport {\n    MenuUnfoldOutlined,\n    MenuFoldOutlined,\n    UserOutlined,\n    VideoCameraOutlined,\n    UploadOutlined,\n    HomeOutlined,\n\n} from '@ant-design/icons';\nimport MainList from './component/MainList';\nimport TestList from \"./component/TestList\";\n\nconst {Header, Sider, Content} = Layout;\n\nclass App extends React.Component {\n\n    state = {\n        collapsed: true,\n    };\n\n    toggle = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    };\n\n    render() {\n        return (\n            <Layout>\n                <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key=\"1\" icon={<UserOutlined/>}>\n                            nav 1\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<VideoCameraOutlined/>}>\n                            nav 2\n                        </Menu.Item>\n                        <Menu.Item key=\"3\" icon={<UploadOutlined/>}>\n                            nav 3\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\"\n                            style={{padding: 0, backgroundColor: '#391085'}}>\n                        <Row justify=\"space-between\">\n                            <Col>\n                                {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                                    className: 'trigger',\n                                    style: {\n                                        marginRight: '36px', color: 'white',\n                                        fontSize: '18px', backgroundColor: '#fa8c16',\n                                        padding: '8px', borderRadius: '50%'\n                                    },\n                                    onClick: this.toggle,\n                                })}\n                                <HomeOutlined style={{color: 'white', marginRight: '24px', fontSize: '18px'}}/>\n                                <span style={{\n                                    color: 'white',\n                                    marginRight: '16px',\n                                    overflow: 'scroll'\n                                }}>\n                  صفحه اصلی\n                </span>\n                            </Col>\n                            <Col>\n                                <UserOutlined style={{color: 'white', marginLeft: '4px'}}/>\n                                <span style={{\n                                    color: 'white',\n                                    marginRight: '4px',\n                                    marginLeft: '14px'\n                                }}>\n                  User \n                </span>\n                            </Col>\n                        </Row>\n\n                    </Header>\n                    <div className='background-content'>\n\n                        <Content\n                            className=\"site-layout-background content-height\"\n                            theme='dark'\n                            style={{\n                                padding: 24,\n                            }}\n                        >\n                            {/*<MainList/>*/}\n                            <TestList/>\n                        </Content>\n                    </div>\n                </Layout>\n            </Layout>\n        );\n    }\n\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport {ConfigProvider} from \"antd\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <ConfigProvider direction=\"rtl\">\n        <App />\n    </ConfigProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}